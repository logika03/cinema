@model FilmViewModel
@{
    var currentTime = (DateTime)Context.Items["CurrentDay"];
}

<div href="@Url.Content($"~/film/{Model.Id}")" class="with-schedule list-group-item list-group-item-action d-flex flex-row align-items-start li-dark-transparent">
    <div class="d-flex w-100 py-1 pr-4 pl-lg-0 pl-4 justify-content-lg-between align-items-center">
        <div class="d-flex col-5">
            <div class="p-0 movie-list-item-content">
                <img src="@Url.Content(Model.ImagePath)" class="bg-white d-flex align-items-center justify-content-center h-100 w-100"/>
            </div>
            <div class="ml-3 movie-list-item-info d-flex flex-column align-items-start justify-content-around">
            <div>
                <div class="d-flex justify-content-center align-items-center">
                    <h4>@Model.Name</h4>
                    <h5 class="badge badge-secondary ml-2" style="font-size: 1rem; margin-bottom:3px">New</h5>
                </div>
                <small>@Model.Year г.</small>
            </div>
            <small>@Model.Genres.Aggregate((a, b) => $"{a}, {b}")</small>
            <small class="text-small">Продолжительность: @Model.DurationInMinutes мин.</small>
        </div>
        </div>
        <div class="d-none w-100 d-860-block d-lg-block d-xl-block ml-5 mr-10">
            <div class="d-flex justify-content-start p-2 ml-5">
                @foreach (var schedule in Model.Schedule)
                {
                    @await Component.InvokeAsync("ScheduleBadge", new {scheduleViewModel = schedule})
                }
            </div>
        </div>
    </div>
</div>
@model BookingPageViewModel
@inject AuthService AuthService
@{
	var unavailableSeats = Model.BookingsInSchedule
		.ToDictionary(booking => booking.Seat);
}

<div id="main" class="z-index--1">
			<div class="super-container p-2 mb-4">
				<div class="mt-3 w-100">
					<div id="booking-alert" class="alert alert-danger login-form-error d-none">
						<div class="text-center">Произошла ошибка</div>
					</div>
					<h3 class="text-center">Зал @Model.Schedule.Hall.HallNumber</h3>
					<div class="text-center">Цена за место: @Model.Schedule.PricePerSeat руб.</div>
					<input type="hidden" id="pricePerSeat" value="@Model.Schedule.PricePerSeat"/>
					<input type="hidden" id="seatsPerRow" value="@Model.Schedule.Hall.SeatsPerRow"/>
					<input type="hidden" id="scheduleId" value="@Model.Schedule.Id"/>
				</div>

				<div class="py-3 px-5" id="places-grid">
				</div>

				<div class="py-3 px-5 d-none" id="places">
					@for (int i = 0; i < Model.Schedule.Hall.SeatsCount; i++)
					{
						if (unavailableSeats.ContainsKey(i))
						{
							<div class="seat-button @(unavailableSeats[i].User.NickName == AuthService.Name?"user-seat":"")" disabled> </div>
						}
						else
						{
							<div class="seat-button"> </div>
						}
					}
				</div>

				<div class="w-100 d-flex flex-column justify-content-center align-items-center">
					<div class="my-2">Цена: <span id="price">0</span> руб.</div>
					<button id="book-submit" class="btn btn-outline-dark-transparent mt-1">
						Забронировать
					</button>
				</div>
			</div>
		</div>

@section Scripts{
    <script src="~/js/booking_script.js"></script>
}
@model FilmViewModel
@inject AuthService AuthService
@{
	ViewData["title"] = Model.Name;
	var currentTime = (DateTime)Context.Items["CurrentDay"];
	var scheduleCurrent = Model.Schedule.Where(model => 
		model.Time.Date == currentTime.Date);
}

<div id="main" class="z-index--1">
	<div id="movie-container" style="background-image: url(@Url.Content(Model.ImagePath))">
		<div id="movie-main">
			<div id="movie-info-container">
				<div class="d-flex flex-column">
					<div class="d-flex justify-content-center flex-column align-items-center">
						<div class="d-flex justify-content-center align-items-center">
							<span id="movie-name">@Model.Name</span>
							<h5 class="badge badge-secondary ml-2" style="font-size: 1rem; transform:translateY(32%)">New</h5>
						</div>
					</div>
					<div id="movie-content" class="p-0 mt-2">
						<img src="@Url.Content(Model.ImagePath)" class="bg-white d-flex align-items-center justify-content-center h-100 w-100"/>
					</div>
					<div id="rating">
						<div class="text-small">Рейтинг:</div>
						<div id="rating-value" class="text-small ml-2" style="color: #fff">@Model.Rating</div>
					</div>
				</div>
				<div id="movie-info" class="d-flex flex-column align-items-start justify-content-center h-100">
					<div class="mt-3 d-flex">
						<div class="span-small text-right movie-info-text">Год:</div>
						<div class="span-small ml-2">@Model.Year</div>
					</div>

					<div class="mt-1 d-flex">
						<div class="span-small text-right movie-info-text">Жанры:</div>
						<div class="span-small ml-2">@Model.Genres.Aggregate((a, b) => $"{a}, {b}")</div>
					</div>

					<div class="mt-1 d-flex">
						<div class="span-small text-right movie-info-text">Режиссер:</div>
						<div class="span-small ml-2">@Model.Producer</div>
					</div>

					<div class="mt-1 d-flex">
						<div class="span-small text-right movie-info-text">В ролях:</div>
						<div class="span-small ml-2">@Model.Actors.Aggregate((a, b) => $"{a}, {b}")</div>
					</div>

					<div class="mt-3 d-flex fs-09">
						<div class="text-small text-right movie-info-text">Продолжительность:</div>
						<div class="text-small ml-2">@Model.Duration.TotalMinutes мин.</div>
					</div>
				</div>
			</div>
		</div>

		<div id="movie-desc" class="movie-secondary d-flex justify-content-center align-items-center flex-column text-center">
			<h4>Описание</h4>
			<p>@Model.Description</p>
		</div>

		<div id="movie-schedule" class="movie-secondary d-flex justify-content-center align-items-center flex-column">
			<h4 class="p-1">Расписание</h4>
			<div class="schedule-dropdown w-100">
				<button class="btn btn-dark-transparent dropdown-toggle d-flex justify-content-center w-100" type="button" id="dropdownMenuButton" data-target="schedule-dropdown-menu" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
					@currentTime.Date.ToString("dd.MM.yyyy")
				</button>
				<div id="schedule-dropdown-menu" class="dropdown-menu dropdown-dark-transparent w-75" aria-labelledby="dropdownMenuButton">
					<form action="#schedule-tags" method="get">
						@{ var days = (int)(currentTime.Date - DateTime.Now.Date).TotalDays;}
						@for (int i = -days; i < 7 - days; i++)
						{
							if (i != 0)
							{
								<input type="submit" class="dropdown-item btn btn-dark-transparent" value="@currentTime.AddDays(i).ToString("dd.MM.yyyy")" name="schedule_date">
							}
						}
					</form>
				</div>
			</div>
			<div id="schedule-tags" class="d-flex justify-content-center p-2">
				@foreach (var schedule in scheduleCurrent)
				{
					@await Component.InvokeAsync("ScheduleBadge", new {scheduleViewModel = schedule})
				}
			</div>
		</div>
	</div>

	<div id="reviews-container" class="d-flex flex-column justify-content-center align-items-center">
		<h4 class="p-2">Отзывы</h4>
		
		@if (AuthService.IsAuthenticated)
		{
			<form action="@Url.Content("~/addreview")" method="post" class="w-100 px-5 mb-3">
				<input type="hidden" value="@Model.Id" name="id"/>
				<textarea rows="3" name="review" class="textarea-dark-transparent review-text w-100"></textarea>
				<div class="d-flex justify-content-between mt-3">
					<div>
						<label for="rating-select">Рейтинг:</label>
						<select id="rating-select" name="rating" class="ml-2 textarea-dark-transparent">
							<option value="0">0</option>
							<option value="1">1</option>
							<option value="2">2</option>
							<option value="3">3</option>
							<option value="4">4</option>
							<option value="5">5</option>
							<option value="6">6</option>
							<option value="7">7</option>
							<option value="8">8</option>
							<option value="9">9</option>
							<option value="10">10</option>
						</select>
					</div>
					<button type="submit" class="btn btn-outline-dark-transparent">Оставить отзыв</button>
				</div>
			</form>
		}
		
		<div class="movie-review-list list-group list-group-flush w-100">
			@foreach (var review in Model.Reviews.OrderByDescending(review => review.TimeOfReview))
			{
				@await Html.PartialAsync("_MovieReviewPartial", review)
			}
		</div>
	</div>
</div>

@section Scripts{
	<script src="~/js/film_script.js"></script>
}